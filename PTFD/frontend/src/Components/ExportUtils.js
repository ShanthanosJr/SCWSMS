
import jsPDF from 'jspdf';
import autoTable from 'jspdf-autotable';

// Company branding constants
const COMPANY_NAME = "Workflows Engineering";
const COMPANY_TAGLINE = "Build Your Dreams.. ";

// Logo as base64 data URL for PDF embedding
const LOGO_DATA_URL = "data:image/png;base64," +
""

// Professional Blue/White Color Scheme 
const COLORS = {
  primary: [41, 98, 255],      // Deep Blue #2962FF
  secondary: [33, 150, 243],    // Light Blue #2196F3
  accent: [63, 81, 181],        // Indigo #3F51B5
  dark: [21, 32, 43],           // Dark Navy #15202B
  light: [245, 248, 250],       // Light Gray #F5F8FA
  white: [255, 255, 255],       // Pure White
  text: [33, 37, 41],           // Dark Text #212529
  background: [248, 249, 250],  // Background #F8F9FA
  success: [76, 175, 80],       // Green #4CAF50
  warning: [255, 193, 7],       // Amber #FFC107
  danger: [244, 67, 54]         // Red #F44336
};

// Page margins and helpers - IMPROVED MARGINS
const MARGINS = { left: 20, right: 20, top: 30, bottom: 30 };
const getPageSize = (doc) => ({
  width: doc.internal.pageSize.width,
  height: doc.internal.pageSize.height
});

// ---------- Helper: ensure there is enough space, otherwise add page & header ----------
const ensureSpace = (doc, yPos, neededHeight, headerCallback) => {
  const { height } = getPageSize(doc);
  if (yPos + neededHeight > height - MARGINS.bottom) {
    doc.addPage();
    // Add watermark to new page
    addWatermarkToCurrentPage(doc);
    // headerCallback should return the new yPosition (like createPageHeader does)
    if (typeof headerCallback === 'function') {
      return headerCallback();
    }
    // fallback: return top margin
    return MARGINS.top;
  }
  return yPos;
};

// ---------- Logo watermark helper for individual pages ----------
const addWatermarkToCurrentPage = (doc) => {
  const { width, height } = getPageSize(doc);
  const pageCount = doc.getNumberOfPages();
  const currentPage = doc.getCurrentPageInfo().pageNumber;
  
  // Only add watermark to content pages (not first and last)
  if (currentPage > 1 && currentPage < pageCount) {
    doc.saveGraphicsState?.();
    try {
      // Set very low opacity for watermark
      doc.setGState?.(new doc.GState() ? new doc.GState({ opacity: 0.08 }) : {});
      
      // Try to load and add logo image
      try {
        // Position logo in center with constrained size
        const logoSize = Math.min(120, width * 0.3, height * 0.3);
        const x = (width - logoSize) / 2;
        const y = (height - logoSize) / 2;

        doc.addImage(LOGO_DATA_URL, 'PNG', x, y, logoSize, logoSize, undefined, 'NONE');
      } catch (e) {
        // Fallback to text watermark if image fails
        doc.setFontSize(48);
        doc.setFont("helvetica", "bold");
        doc.setTextColor(...COLORS.primary);
        doc.text("WE", width / 2, height / 2 + 20, { align: 'center' });
      }
    } catch (e) {
      // Ignore watermark errors
    } finally {
      doc.restoreGraphicsState?.();
    }
  }
};

// ---------- Helper: draw a lighter hexagon (clipped to safe area) ----------
const drawHexagon = (doc, x, y, size) => {
  // Keep hexagon light and small - REDUCED OPACITY
  doc.saveGraphicsState?.();
  try {
    doc.moveTo(x + size * Math.cos(0), y + size * Math.sin(0));
    for (let i = 1; i <= 6; i++) {
      const angle = (i * 60 * Math.PI) / 180;
      const nextX = x + size * Math.cos(angle);
      const nextY = y + size * Math.sin(angle);
      doc.lineTo(nextX, nextY);
    }
    // fill lightly - MUCH LOWER OPACITY
    doc.setFillColor(...COLORS.primary);
    doc.setGState?.(new doc.GState() ? new doc.GState({ opacity: 0.01 }) : {});
    doc.fill();
  } catch (e) {
    // if low-level path ops not supported, silently skip fancy hexes
  } finally {
    doc.restoreGraphicsState?.();
  }
};

// ---------- Geometric background (subtle, clipped to margins) - MUCH LIGHTER ----------
const addGeometricBackground = (doc, pageNumber) => {
  const { width, height } = getPageSize(doc);

  // Only draw within safe margins to avoid touching page edges
  const left = MARGINS.left;
  const right = width - MARGINS.right;
  const top = MARGINS.top;
  const bottom = height - MARGINS.bottom;

  doc.saveGraphicsState?.();

  // MUCH lower opacity so lines don't dominate
  try {
    doc.setGState?.(new doc.GState() ? new doc.GState({ opacity: 0.015 }) : {});
  } catch (e) { /* ignore */ }

  if (pageNumber === 1) {
    // Cover page - subtle hex pattern inside safe box - MUCH SPARSER
    doc.setFillColor(...COLORS.primary);
    for (let x = left; x < right; x += 80) {
      for (let y = top; y < bottom; y += 70) {
        // staggered offsets
        const offsetX = (Math.floor((y - top) / 70) % 2 === 0) ? 40 : 0;
        drawHexagon(doc, x + offsetX, y, 4);
      }
    }
  } else {
    // Content pages - REMOVE diagonal lines that cause blue line issues
    // Keep background completely clean for content pages
  }

  doc.restoreGraphicsState?.();
};

// ---------- Cover page (improved margins & reduced gradients) ----------
const createCoverPage = (doc, title, reportType) => {
  const { width, height } = getPageSize(doc);

  // Full white background
  doc.setFillColor(...COLORS.white);
  doc.rect(0, 0, width, height, 'F');

  // Subtle geometric background inside safe area
  addGeometricBackground(doc, 1);

  // Top banner (contained within page width but not too tall)
  const bannerHeight = 60;
  doc.setFillColor(...COLORS.primary);
  doc.rect(0, 0, width, bannerHeight, 'F');

  // REMOVED gradient to prevent blue line artifacts

  // Logo circle centered but within margins
  const cx = width / 2;
  doc.setFillColor(...COLORS.white);
  doc.circle(cx, 45, 20, 'F');
  doc.setDrawColor(...COLORS.primary);
  doc.setLineWidth(1.2);
  doc.circle(cx, 45, 20);

  // Logo icon - using actual logo image
  try {
    const logoSize = 30; // Fit within the 20 radius circle
    const logoX = cx - logoSize / 2;
    const logoY = 45 - logoSize / 2;
    doc.addImage(LOGO_DATA_URL, 'PNG', logoX, logoY, logoSize, logoSize, undefined, 'NONE');
  } catch (e) {
    // Fallback to text if image fails
    doc.setFontSize(20);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(...COLORS.primary);
    doc.text("⚡", cx, 52, { align: 'center' });
  }

  // Company title block (within margins)
  doc.setFontSize(24);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(...COLORS.dark);
  doc.text(COMPANY_NAME, cx, 90, { align: 'center' });

  // Tagline
  doc.setFontSize(11);
  doc.setFont("helvetica", "normal");
  doc.setTextColor(...COLORS.text);
  doc.text(COMPANY_TAGLINE, cx, 105, { align: 'center' });

  // Decorative subtle separator within margins
  doc.setDrawColor(...COLORS.primary);
  doc.setLineWidth(0.5);
  doc.line(MARGINS.left + 30, 120, width - MARGINS.right - 30, 120);

  // Title box (rounded) inside margins
  doc.setFillColor(...COLORS.light);
  doc.roundedRect(MARGINS.left + 10, 135, width - MARGINS.left - MARGINS.right - 20, 45, 5, 5, 'F');
  doc.setDrawColor(...COLORS.primary);
  doc.setLineWidth(0.3);
  doc.roundedRect(MARGINS.left + 10, 135, width - MARGINS.left - MARGINS.right - 20, 45, 5, 5);

  doc.setFontSize(16);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(...COLORS.dark);
  doc.text(title, width / 2, 162, { align: 'center' });

  // Small badge for report type
  const badgeW = 60;
  doc.setFillColor(...COLORS.primary);
  doc.roundedRect(width/2 - badgeW/2, 190, badgeW, 14, 3, 3, 'F');
  doc.setFontSize(9);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(...COLORS.white);
  doc.text(reportType, width/2, 200, { align: 'center' });

  // Bottom info area inside margins
  const now = new Date();
  doc.setFillColor(...COLORS.light);
  doc.rect(MARGINS.left, height - 50, width - MARGINS.left - MARGINS.right, 35, 'F');

  doc.setFontSize(9);
  doc.setFont("helvetica", "normal");
  doc.setTextColor(...COLORS.text);
  doc.text("Report Generated On:", MARGINS.left + 6, height - 35);
  doc.setFont("helvetica", "bold");
  doc.text(now.toLocaleDateString('en-US', { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' }), MARGINS.left + 6, height - 25);

  doc.setFont("helvetica", "normal");
  doc.text("Financial Department", width - MARGINS.right - 6, height - 35, { align: 'right' });
  doc.text("Project Timeline & Financial Dashboard", width - MARGINS.right - 6, height - 25, { align: 'right' });
};

// ---------- Header for content pages (returns starting Y position for content) ----------
const createPageHeader = (doc, title, pageType) => {
  const { width } = getPageSize(doc);

  // Header band within top margin - REDUCED HEIGHT
  const headerHeight = 30;
  doc.setFillColor(...COLORS.primary);
  doc.rect(0, 0, width, headerHeight, 'F');

  // REMOVED gradient to prevent blue lines

  // Small logo circle at left (within margins)
  doc.setFillColor(...COLORS.white);
  doc.circle(MARGINS.left + 12, headerHeight / 2, 8, 'F');
  doc.setDrawColor(...COLORS.primary);
  doc.setLineWidth(0.8);
  doc.circle(MARGINS.left + 12, headerHeight / 2, 8);
  // Logo image
  try {
    const logoSize = 12; // Fit within the 8 radius circle
    const logoX = MARGINS.left + 12 - logoSize / 2;
    const logoY = headerHeight / 2 - logoSize / 2;
    doc.addImage(LOGO_DATA_URL, 'PNG', logoX, logoY, logoSize, logoSize, undefined, 'NONE');
  } catch (e) {
    // Fallback to text if image fails
    doc.setFontSize(8);
    doc.setTextColor(...COLORS.primary);
    doc.text("⚡", MARGINS.left + 12, (headerHeight/2) + 2, { align: 'center' });
  }

  // Company name
  doc.setFontSize(10);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(...COLORS.white);
  doc.text(COMPANY_NAME, MARGINS.left + 28, headerHeight / 2 + 3);

  // Page title right-aligned within margins
  doc.setFontSize(9);
  doc.setFont("helvetica", "bold");
  doc.text(title, width - MARGINS.right, 10, { align: 'right' });

  // Page type smaller
  doc.setFontSize(7);
  doc.setFont("helvetica", "normal");
  doc.text(pageType, width - MARGINS.right, 20, { align: 'right' });

  // Return the Y start for content — leave a gap after the header
  return headerHeight + 12;
};

// ---------- Footer (contained within margin) ----------
const createFooter = (doc) => {
  const { width, height } = getPageSize(doc);

  // Light separator line inside margins
  doc.setDrawColor(...COLORS.primary);
  doc.setLineWidth(0.2);
  doc.line(MARGINS.left, height - MARGINS.bottom + 5, width - MARGINS.right, height - MARGINS.bottom + 5);

  // Company info and contact
  doc.setFontSize(7);
  doc.setFont("helvetica", "normal");
  doc.setTextColor(...COLORS.text);
  doc.text(`${COMPANY_NAME} `, MARGINS.left, height - MARGINS.bottom + 15);

  doc.text(" info@workflowsengineering.com                  ", width - MARGINS.right, height - MARGINS.bottom + 15, { align: 'right' });
};

// ---------- Page numbering (skip cover; number content pages starting at 1) ----------
const addPageNumbers = (doc) => {
  const pageCount = doc.getNumberOfPages();
  const { height, width } = getPageSize(doc);

  // Number pages 2..(pageCount-1) as content pages; show smaller pill to be less intrusive
  for (let i = 2; i <= pageCount - 1; i++) {
    doc.setPage(i);
    doc.setFillColor(...COLORS.primary);
    // small rounded rect instead of full circle
    const px = width - MARGINS.right + 2;
    const py = height - MARGINS.bottom + 15;
    doc.roundedRect(px - 12, py - 6, 22, 12, 6, 6, 'F');
    doc.setFontSize(8);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(...COLORS.white);
    // label content pages starting from 1
    doc.text(`${i - 1}`, px - 1, py + 2, { align: 'center' });
  }
};

// ---------- Image watermark helper (applies to pages 2..pageCount-1 only) ----------
const addWatermark = (doc, imageBase64 = null, opts = {}) => {
  const pageCount = doc.getNumberOfPages();
  const { width, height } = getPageSize(doc);

  // default options
  const settings = {
    maxWidth: Math.min(200, width - MARGINS.left - MARGINS.right),
    maxHeight: Math.min(180, height - MARGINS.top - MARGINS.bottom),
    opacity: 0.08,
    ...opts
  };

  for (let i = 2; i <= pageCount - 1; i++) {
    doc.setPage(i);

    // REMOVED geometric background to prevent blue lines

    if (imageBase64) {
      // Draw the logo image at the center with low opacity and constrained size
      doc.saveGraphicsState?.();
      try {
        doc.setGState?.(new doc.GState() ? new doc.GState({ opacity: settings.opacity }) : {});
      } catch (e) { /* ignore */ }

      // compute placement
      const imgW = settings.maxWidth;
      const imgH = settings.maxHeight;
      const x = (width - imgW) / 2;
      const y = (height - imgH) / 2;
      try {
        doc.addImage(imageBase64, imageBase64.startsWith('/9j') ? 'JPEG' : 'PNG', x, y, imgW, imgH, undefined, 'NONE');
      } catch (e) {
        // if image invalid, fallback to text watermark below
      } finally {
        doc.restoreGraphicsState?.();
      }
    } else {
      // fallback text watermark (light)
      doc.saveGraphicsState?.();
      try {
        doc.setGState?.(new doc.GState() ? new doc.GState({ opacity: 0.05 }) : {});
      } catch (e) { /* ignore */ }
      doc.setFontSize(60);
      doc.setFont("helvetica", "bold");
      doc.setTextColor(...COLORS.primary);
      // First line
      doc.text("Workflows", width / 2, height / 2 - 8, { align: "center" });
    // Second line (moved slightly down)
      doc.text("Engineering", width / 2, height / 2 + 28, { align: "center" });
      doc.restoreGraphicsState?.();
    }
  }
};

// ---------- About Company (uses ensureSpace to avoid overflow) ----------
const createAboutCompanyPage = (doc) => {
  const { width } = getPageSize(doc);
  doc.addPage();
  addWatermarkToCurrentPage(doc);
  let yPosition = createPageHeader(doc, "About Our Company", "COMPANY PROFILE");

  // Section header block (within margins) - IMPROVED SPACING
  doc.setFillColor(...COLORS.primary);
  doc.roundedRect(MARGINS.left, yPosition, width - MARGINS.left - MARGINS.right, 22, 3, 3, 'F');
  doc.setFontSize(14);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(...COLORS.white);
  doc.text("ABOUT WORKFLOWS ENGINEERING", width / 2, yPosition + 15, { align: 'center' });
  yPosition += 32;

  const sections = [
    {
      title: "WHO WE ARE",
      content: "Workflows Engineering stands as a premier technology solutions provider, specializing in revolutionary construction management systems. Our platform transforms traditional project delivery through intelligent automation, comprehensive safety protocols, and data-driven insights."
    },
    {
      title: "OUR EXPERTISE",
      content: "We deliver cutting-edge software solutions that integrate seamlessly with existing workflows, providing real-time project monitoring, resource optimization, and predictive analytics. Our expertise spans across project management, safety compliance, and operational efficiency."
    },
    {
      title: "WHY CHOOSE US",
      content: "With a proven track record of successful implementations across diverse construction projects, we combine technical excellence with deep industry knowledge. Our solutions are designed to scale with your business while maintaining the highest standards of security and reliability."
    }
  ];

  sections.forEach((section) => {
    // ensure space before drawing the next block - IMPROVED SPACING
    yPosition = ensureSpace(doc, yPosition, 60, () => createPageHeader(doc, "About Our Company", "COMPANY PROFILE"));

    doc.setFillColor(...COLORS.light);
    doc.roundedRect(MARGINS.left, yPosition, width - MARGINS.left - MARGINS.right, 50, 3, 3, 'F');
    doc.setDrawColor(...COLORS.primary);
    doc.setLineWidth(0.3);
    doc.roundedRect(MARGINS.left, yPosition, width - MARGINS.left - MARGINS.right, 50, 3, 3);

    // Section title pill
    doc.setFillColor(...COLORS.primary);
    doc.roundedRect(MARGINS.left + 5, yPosition + 5, 80, 14, 2, 2, 'F');
    doc.setFontSize(9);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(...COLORS.white);
    doc.text(section.title, MARGINS.left + 45, yPosition + 14, { align: 'center' });

    doc.setFontSize(8);
    doc.setFont("helvetica", "normal");
    doc.setTextColor(...COLORS.text);
    const splitText = doc.splitTextToSize(section.content, width - MARGINS.left - MARGINS.right - 20);
    doc.text(splitText, MARGINS.left + 8, yPosition + 26);

    yPosition += 65;
  });

  // Key metrics section - IMPROVED SPACING
  yPosition = ensureSpace(doc, yPosition, 70, () => createPageHeader(doc, "About Our Company", "COMPANY PROFILE"));

  doc.setFillColor(...COLORS.secondary);
  doc.roundedRect(MARGINS.left, yPosition, width - MARGINS.left - MARGINS.right, 18, 2, 2, 'F');
  doc.setFontSize(11);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(...COLORS.white);
  doc.text("KEY ACHIEVEMENTS", MARGINS.left + 8, yPosition + 12);

  yPosition += 28;

  const metrics = [
    { label: "Projects Completed", value: "500+" },
    { label: "Client Satisfaction", value: "98%" },
    { label: "Years Experience", value: "15+" },
    { label: "Team Members", value: "50+" }
  ];

  metrics.forEach((metric, index) => {
    const colWidth = (width - MARGINS.left - MARGINS.right - 20) / 4;
    const xPos = MARGINS.left + 5 + (index * colWidth);

    doc.setFillColor(...COLORS.white);
    doc.roundedRect(xPos, yPosition, colWidth - 4, 35, 2, 2, 'F');
    doc.setDrawColor(...COLORS.secondary);
    doc.setLineWidth(0.3);
    doc.roundedRect(xPos, yPosition, colWidth - 4, 35, 2, 2);

    doc.setFontSize(12);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(...COLORS.primary);
    doc.text(metric.value, xPos + (colWidth - 4)/2, yPosition + 18, { align: 'center' });

    doc.setFontSize(7);
    doc.setFont("helvetica", "normal");
    doc.setTextColor(...COLORS.text);
    const splitLabel = doc.splitTextToSize(metric.label, colWidth - 8);
    doc.text(splitLabel, xPos + (colWidth - 4)/2, yPosition + 28, { align: 'center' });
  });

  yPosition += 50;

  // Values - IMPROVED SPACING
  doc.setFillColor(...COLORS.accent);
  doc.roundedRect(MARGINS.left, yPosition, width - MARGINS.left - MARGINS.right, 18, 2, 2, 'F');
  doc.setFontSize(12);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(...COLORS.white);
  doc.text("CORE VALUES", MARGINS.left + 15, yPosition + 12);

  yPosition += 28;
  const values = ["Innovation", "Quality", "Integrity", "Safety", "Excellence"];
  values.forEach((value, index) => {
    const xPos = MARGINS.left + 8 + (index * 28);
    doc.setFillColor(...COLORS.accent);
    doc.roundedRect(xPos, yPosition, 24, 14, 2, 2, 'F');
    doc.setFontSize(7);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(...COLORS.white);
    doc.text(value, xPos + 12, yPosition + 9, { align: 'center' });
  });
  return yPosition + 50;
};

// ---------- Vision & Mission page ----------
const createVisionMissionPage = (doc) => {
  doc.addPage();
  addWatermarkToCurrentPage(doc);
  let yPosition = createPageHeader(doc, "Vision & Mission", "CORPORATE PHILOSOPHY");
  const { width } = getPageSize(doc);

  // Vision - IMPROVED SPACING
  doc.setFillColor(...COLORS.primary);
  doc.roundedRect(MARGINS.left, yPosition, width - MARGINS.left - MARGINS.right, 22, 2, 2, 'F');
  doc.setFontSize(14);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(...COLORS.white);
  doc.text("OUR VISION", width / 2, yPosition + 15, { align: 'center' });
  yPosition += 32;

  yPosition = ensureSpace(doc, yPosition, 65, () => createPageHeader(doc, "Vision & Mission", "CORPORATE PHILOSOPHY"));
  doc.setFillColor(...COLORS.light);
  doc.roundedRect(MARGINS.left + 5, yPosition, width - MARGINS.left - MARGINS.right - 10, 50, 4, 4, 'F');
  doc.setDrawColor(...COLORS.primary);
  doc.setLineWidth(0.3);
  doc.roundedRect(MARGINS.left + 5, yPosition, width - MARGINS.left - MARGINS.right - 10, 50, 4, 4);

  doc.setFillColor(...COLORS.primary);
  doc.circle(MARGINS.left + 20, yPosition + 15, 6, 'F');
  doc.setFontSize(8);
  doc.setTextColor(...COLORS.white);
  doc.text("✓", MARGINS.left + 20, yPosition + 18, { align: 'center' });

  doc.setFontSize(9);
  doc.setFont("helvetica", "normal");
  doc.setTextColor(...COLORS.text);
  const visionText = "To revolutionize the construction industry through innovative technology solutions that enhance productivity, ensure safety, and promote sustainable building practices worldwide.";
  const splitVision = doc.splitTextToSize(visionText, width - MARGINS.left - MARGINS.right - 40);
  doc.text(splitVision, MARGINS.left + 35, yPosition + 15);
  yPosition += 65;

  // Mission - IMPROVED SPACING
  doc.setFillColor(...COLORS.secondary);
  doc.roundedRect(MARGINS.left, yPosition, width - MARGINS.left - MARGINS.right, 22, 2, 2, 'F');
  doc.setFontSize(14);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(...COLORS.white);
  doc.text("OUR MISSION", width / 2, yPosition + 15, { align: 'center' });
  yPosition += 32;

  yPosition = ensureSpace(doc, yPosition, 75, () => createPageHeader(doc, "Vision & Mission", "CORPORATE PHILOSOPHY"));
  doc.setFillColor(...COLORS.light);
  doc.roundedRect(MARGINS.left + 5, yPosition, width - MARGINS.left - MARGINS.right - 10, 65, 4, 4, 'F');
  doc.setDrawColor(...COLORS.secondary);
  doc.setLineWidth(0.3);
  doc.roundedRect(MARGINS.left + 5, yPosition, width - MARGINS.left - MARGINS.right - 10, 65, 4, 4);

  doc.setFillColor(...COLORS.secondary);
  doc.circle(MARGINS.left + 20, yPosition + 20, 6, 'F');
  doc.setFontSize(8);
  doc.setTextColor(...COLORS.white);
  doc.text("→", MARGINS.left + 20, yPosition + 23, { align: 'center' });

  doc.setFontSize(9);
  doc.setFont("helvetica", "normal");
  doc.setTextColor(...COLORS.text);
  const missionText = "We are committed to delivering exceptional software solutions that streamline construction workflows, enhance project outcomes, and empower teams to achieve their goals efficiently. Through continuous innovation and client partnership, we build lasting relationships based on trust and excellence.";
  const splitMission = doc.splitTextToSize(missionText, width - MARGINS.left - MARGINS.right - 40);
  doc.text(splitMission, MARGINS.left + 35, yPosition + 18);
  yPosition += 80;



  return yPosition + 30;
};

// ---------- Project Data Page (with safe tables) ----------
const createProjectDataPage = (doc, project, reportType) => {
  doc.addPage();
  addWatermarkToCurrentPage(doc);
  let yPosition = createPageHeader(doc, `${reportType} Details`, reportType.toUpperCase());
  const { width } = getPageSize(doc);

  // Data header - IMPROVED SPACING
  doc.setFillColor(...COLORS.primary);
  doc.roundedRect(MARGINS.left, yPosition, width - MARGINS.left - MARGINS.right, 22, 2, 2, 'F');
  doc.setFontSize(14);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(...COLORS.white);
  doc.text(`${reportType.toUpperCase()} OVERVIEW`, width / 2, yPosition + 15, { align: 'center' });
  yPosition += 30;

  if (reportType === "PROJECT") {
    const summaryData = [
      { label: "Budget", value: project.pbudget ? `$${parseFloat(project.pbudget).toLocaleString()}` : 'N/A', color: COLORS.success },
      { label: "Status", value: project.pstatus || 'N/A', color: COLORS.primary },
      { label: "Priority", value: project.ppriority || 'N/A', color: COLORS.warning }
    ];

    summaryData.forEach((item, index) => {
      const xPos = MARGINS.left + (index * 55);
      doc.setFillColor(...COLORS.white);
      doc.roundedRect(xPos, yPosition, 50, 40, 3, 3, 'F');
      doc.setDrawColor(...item.color);
      doc.setLineWidth(0.4);
      doc.roundedRect(xPos, yPosition, 50, 40, 3, 3);

      // header pill
      doc.setFillColor(...item.color);
      doc.roundedRect(xPos + 3, yPosition + 3, 44, 14, 2, 2, 'F');
      doc.setFontSize(8);
      doc.setFont("helvetica", "bold");
      doc.setTextColor(...COLORS.white);
      doc.text(item.label, xPos + 25, yPosition + 12, { align: 'center' });

      // value
      doc.setFontSize(9);
      doc.setFont("helvetica", "bold");
      doc.setTextColor(...item.color);
      const splitValue = doc.splitTextToSize(item.value, 44);
      doc.text(splitValue, xPos + 25, yPosition + 26, { align: 'center' });
    });

    yPosition += 50;

    // Detailed table - IMPROVED TABLE STYLING
    const projectData = [
      ["Project Name", project.pname || 'N/A'],
      ["Project Code", project.pcode || 'N/A'],
      ["Project Type", project.ptype || 'N/A'],
      ["Location", project.plocation || 'N/A'],
      ["Start Date", project.pcreatedat ? new Date(project.pcreatedat).toLocaleDateString() : 'N/A'],
      ["End Date", project.penddate ? new Date(project.penddate).toLocaleDateString() : 'N/A'],
      ["Owner", project.powner || 'N/A'],
      ["Contact", project.potelnumber || 'N/A'],
      ["Email", project.powmail || 'N/A']
    ];

    autoTable(doc, {
      startY: yPosition,
      head: [['Property', 'Details']],
      body: projectData,
      theme: 'grid',
      headStyles: {
        fillColor: COLORS.primary,
        textColor: COLORS.white,
        fontStyle: 'bold',
        fontSize: 9,
        cellPadding: 4
      },
      bodyStyles: {
        fontSize: 8,
        textColor: COLORS.text,
        cellPadding: 4
      },
      alternateRowStyles: {
        fillColor: COLORS.light
      },
      styles: {
        lineColor: COLORS.primary,
        lineWidth: 0.1,
        cellPadding: 4
      },
      columnStyles: {
        0: {
          cellWidth: 45,
          fontStyle: 'bold',
          fillColor: [245, 248, 250],
          textColor: COLORS.primary
        },
        1: { cellWidth: width - MARGINS.left - MARGINS.right - 70 }
      },
      margin: { left: MARGINS.left, right: MARGINS.right },
      pageBreak: 'auto'
    });

    yPosition = doc.lastAutoTable ? doc.lastAutoTable.finalY + 12 : yPosition + 20;

    // Description - IMPROVED SPACING
    if (project.pdescription) {
      yPosition = ensureSpace(doc, yPosition, 55, () => createPageHeader(doc, `${reportType} Details`, reportType.toUpperCase()));
      doc.setFillColor(...COLORS.secondary);
      doc.roundedRect(MARGINS.left, yPosition, width - MARGINS.left - MARGINS.right, 18, 2, 2, 'F');
      doc.setFontSize(11);
      doc.setFont("helvetica", "bold");
      doc.setTextColor(...COLORS.white);
      doc.text("PROJECT DESCRIPTION", MARGINS.left + 5, yPosition + 12);
      yPosition += 24;

      doc.setFillColor(...COLORS.light);
      doc.roundedRect(MARGINS.left + 5, yPosition, width - MARGINS.left - MARGINS.right - 10, 45, 3, 3, 'F');
      doc.setDrawColor(...COLORS.secondary);
      doc.setLineWidth(0.3);
      doc.roundedRect(MARGINS.left + 5, yPosition, width - MARGINS.left - MARGINS.right - 10, 45, 3, 3);

      doc.setFontSize(8);
      doc.setFont("helvetica", "normal");
      doc.setTextColor(...COLORS.text);
      const splitDescription = doc.splitTextToSize(project.pdescription, width - MARGINS.left - MARGINS.right - 25);
      doc.text(splitDescription, MARGINS.left + 10, yPosition + 10);
      yPosition += 55;
    }
  }

  return yPosition + 20;
};

// ---------- Signature Page ----------
const createSignaturePage = (doc) => {
  doc.addPage();
  addWatermarkToCurrentPage(doc);
  let yPosition = createPageHeader(doc, "Authorization", "DOCUMENT APPROVAL");
  const { width } = getPageSize(doc);

  doc.setFillColor(...COLORS.primary);
  doc.roundedRect(MARGINS.left, yPosition, width - MARGINS.left - MARGINS.right, 22, 2, 2, 'F');
  doc.setFontSize(14);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(...COLORS.white);
  doc.text("DOCUMENT AUTHORIZATION", width / 2, yPosition + 15, { align: 'center' });
  yPosition += 32;

  const signatures = [
    { title: "Owned by", role: "Project Owner", department: "Identifier" },
    { title: "Prepared by", role: "Project Manager", department: "Engineering" },
    { title: "Reviewed by", role: "Technical Lead", department: "Quality Assurance" },
    { title: "Approved by", role: "Department Head", department: "Management" }
  ];

  signatures.forEach((sig) => {
    yPosition = ensureSpace(doc, yPosition, 70, () => createPageHeader(doc, "Authorization", "DOCUMENT APPROVAL"));

    doc.setFillColor(...COLORS.light);
    doc.roundedRect(MARGINS.left + 8, yPosition, width - MARGINS.left - MARGINS.right - 16, 60, 4, 4, 'F');
    doc.setDrawColor(...COLORS.primary);
    doc.setLineWidth(0.3);
    doc.roundedRect(MARGINS.left + 8, yPosition, width - MARGINS.left - MARGINS.right - 16, 60, 4, 4);

    // Title pill
    doc.setFillColor(...COLORS.primary);
    doc.roundedRect(MARGINS.left + 12, yPosition + 5, width - MARGINS.left - MARGINS.right - 24, 15, 2, 2, 'F');
    doc.setFontSize(10);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(...COLORS.white);
    doc.text(sig.title.toUpperCase(), width / 2, yPosition + 15, { align: 'center' });

    // Role and dept
    doc.setFontSize(8);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(...COLORS.primary);
    doc.text(`Role: ${sig.role}`, MARGINS.left + 16, yPosition + 30);
    doc.text(`Department: ${sig.department}`, MARGINS.left + 16, yPosition + 40);

    // Signature & date lines
    doc.setDrawColor(...COLORS.secondary);
    doc.setLineWidth(0.3);
    doc.line(MARGINS.left + 24, yPosition + 52, MARGINS.left + 120, yPosition + 52);
    doc.setFontSize(7);
    doc.setFont("helvetica", "normal");
    doc.setTextColor(...COLORS.text);
    doc.text("Signature", MARGINS.left + 24, yPosition + 58);

    doc.line(MARGINS.left + 130, yPosition + 52, width - MARGINS.right - 24, yPosition + 52);
    doc.text("Date", width - MARGINS.right - 24, yPosition + 58);

    yPosition += 75;
  });

  // Disclaimer box - place after signatures - IMPROVED SPACING
  yPosition = ensureSpace(doc, yPosition, 40, () => createPageHeader(doc, "Authorization", "DOCUMENT APPROVAL"));
  doc.setFillColor(...COLORS.light);
  doc.roundedRect(MARGINS.left + 8, yPosition, width - MARGINS.left - MARGINS.right - 16, 35, 3, 3, 'F');
  doc.setFontSize(7);
  doc.setFont("helvetica", "normal");
  doc.setTextColor(...COLORS.text);
  const disclaimerText = "This document contains confidential and proprietary information intended solely for the use of the individual or entity to whom it is addressed. By signing above, you acknowledge that you have received this document in good faith and agree to maintain the confidentiality of all information contained herein. You further agree not to disclose, distribute, reproduce, or use any part of this information for any purpose other than as explicitly authorized by company policy. Your signature confirms your understanding of the importance of safeguarding this information and your commitment to comply fully with all applicable confidentiality obligations and company guidelines";
  const splitDisclaimer = doc.splitTextToSize(disclaimerText, width - MARGINS.left - MARGINS.right - 30);
  doc.text(splitDisclaimer, MARGINS.left + 12, yPosition + 10);

  return yPosition + 45;
};

// ---------- Thank You Page ----------
const createThankYouPage = (doc) => {
  doc.addPage();
  const { width, height } = getPageSize(doc);

  // full white to avoid artifacts
  doc.setFillColor(...COLORS.white);
  doc.rect(0, 0, width, height, 'F');

  addGeometricBackground(doc, 99);

  // Top banner - REDUCED HEIGHT
  doc.setFillColor(...COLORS.primary);
  doc.rect(0, 0, width, 80, 'F');

  // REMOVED gradient to prevent blue lines

  doc.setFontSize(28);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(...COLORS.primary);
  doc.text("THANK YOU", width / 2, 130, { align: 'center' });

  doc.setFontSize(12);
  doc.setFont("helvetica", "normal");
  doc.setTextColor(...COLORS.text);
  doc.text("For choosing Workflows Engineering", width / 2, 150, { align: 'center' });

  // Message
  doc.setFontSize(10);
  doc.setTextColor(...COLORS.text);
  const thankYouMsg = "We appreciate your trust in our solutions. Our commitment to excellence ensures that your projects are delivered with the highest standards of quality and professionalism.";
  const splitMsg = doc.splitTextToSize(thankYouMsg, width - 60);
  doc.text(splitMsg, width / 2, 170, { align: 'center' });

  // Contact box - IMPROVED SPACING
  doc.setFillColor(...COLORS.light);
  doc.roundedRect(MARGINS.left + 15, 200, width - MARGINS.left - MARGINS.right - 30, 60, 4, 4, 'F');
  doc.setDrawColor(...COLORS.primary);
  doc.setLineWidth(0.3);
  doc.roundedRect(MARGINS.left + 15, 200, width - MARGINS.left - MARGINS.right - 30, 60, 4, 4);

  // Contact header
  doc.setFillColor(...COLORS.primary);
  doc.roundedRect(MARGINS.left + 20, 205, width - MARGINS.left - MARGINS.right - 40, 15, 2, 2, 'F');
  doc.setFontSize(11);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(...COLORS.white);
  doc.text("GET IN TOUCH", width / 2, 215, { align: 'center' });

  // Contact details
  doc.setFontSize(9);
  doc.setFont("helvetica", "normal");
  doc.setTextColor(...COLORS.text);
  doc.text("Email: info@workflowsengineering.com", width / 2, 232, { align: 'center' });
  doc.text("Phone: +94 (71) 429-8544", width / 2, 242, { align: 'center' });
  doc.text("Website: www.workflowsengineering.com", width / 2, 252, { align: 'center' });

  // Bottom bar
  doc.setFillColor(...COLORS.primary);
  doc.rect(0, height - 40, width, 40, 'F');
  doc.setFontSize(9);
  doc.setFont("helvetica", "normal");
  doc.setTextColor(...COLORS.white);
  doc.text("Smart Construction Workflows & Safety Management System", width / 2, height - 20, { align: 'center' });
};

// ---------- Timeline data page ----------
const createTimelineDataPage = (doc, timeline) => {
  doc.addPage();
  addWatermarkToCurrentPage(doc);
  let yPosition = createPageHeader(doc, "Timeline Details", "PROJECT TIMELINE");
  const { width } = getPageSize(doc);

  doc.setFillColor(...COLORS.primary);
  doc.roundedRect(MARGINS.left, yPosition, width - MARGINS.left - MARGINS.right, 22, 2, 2, 'F');
  doc.setFontSize(14);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(...COLORS.white);
  doc.text("TIMELINE OVERVIEW", width / 2, yPosition + 15, { align: 'center' });
  yPosition += 30;

  const timelineCards = [
    { label: "Total Workers", value: timeline.workerCount || 0, color: COLORS.primary },
    { label: "Engineers", value: timeline.tengineerCount || 0, color: COLORS.secondary },
    { label: "Architects", value: timeline.architectCount || 0, color: COLORS.accent }
  ];

  timelineCards.forEach((card, index) => {
    const xPos = MARGINS.left + (index * 58);
    doc.setFillColor(...COLORS.white);
    doc.roundedRect(xPos, yPosition, 50, 48, 3, 3, 'F');
    doc.setDrawColor(...card.color);
    doc.setLineWidth(0.4);
    doc.roundedRect(xPos, yPosition, 50, 48, 3, 3);

    doc.setFillColor(...card.color);
    doc.roundedRect(xPos + 3, yPosition + 3, 44, 15, 2, 2, 'F');
    doc.setFontSize(7);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(...COLORS.white);
    doc.text(card.label, xPos + 25, yPosition + 12, { align: 'center' });

    doc.setFontSize(12);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(...card.color);
    doc.text(String(card.value), xPos + 25, yPosition + 30, { align: 'center' });
  });

  yPosition += 60;

  const timelineData = [
    ["Project Code", timeline.pcode || 'N/A'],
    ["Project Name", timeline.projectDetails?.pname || 'N/A'],
    ["Timeline Date", timeline.date ? new Date(timeline.date).toLocaleDateString() : 'N/A'],
    ["Total Staff", (timeline.workerCount || 0) + (timeline.tengineerCount || 0) + (timeline.architectCount || 0)],
    ["Materials Used", timeline.tmaterials?.length || 0],
    ["Tools Required", timeline.ttools?.length || 0],
    ["Expenses Count", timeline.texpenses?.length || 0]
  ];

  autoTable(doc, {
    startY: yPosition,
    head: [['Timeline Property', 'Value']],
    body: timelineData,
    theme: 'grid',
    headStyles: {
      fillColor: COLORS.primary,
      textColor: COLORS.white,
      fontStyle: 'bold',
      fontSize: 9
    },
    bodyStyles: {
      fontSize: 8,
      textColor: COLORS.text
    },
    alternateRowStyles: {
      fillColor: COLORS.light
    },
    styles: {
      lineColor: COLORS.primary,
      lineWidth: 0.1
    },
    columnStyles: {
      0: {
        cellWidth: 65,
        fontStyle: 'bold',
        fillColor: [245, 248, 250],
        textColor: COLORS.primary
      },
      1: { cellWidth: width - MARGINS.left - MARGINS.right - 90 }
    },
    margin: { left: MARGINS.left, right: MARGINS.right },
    pageBreak: 'auto'
  });

  yPosition = doc.lastAutoTable ? doc.lastAutoTable.finalY + 12 : yPosition + 20;

  if (timeline.tnotes) {
    yPosition = ensureSpace(doc, yPosition, 55, () => createPageHeader(doc, "Timeline Details", "PROJECT TIMELINE"));
    doc.setFillColor(...COLORS.secondary);
    doc.roundedRect(MARGINS.left, yPosition, width - MARGINS.left - MARGINS.right, 18, 2, 2, 'F');
    doc.setFontSize(11);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(...COLORS.white);
    doc.text("TIMELINE NOTES", MARGINS.left + 5, yPosition + 12);
    yPosition += 24;

    doc.setFillColor(...COLORS.light);
    doc.roundedRect(MARGINS.left + 5, yPosition, width - MARGINS.left - MARGINS.right - 10, 40, 3, 3, 'F');
    doc.setDrawColor(...COLORS.secondary);
    doc.setLineWidth(0.3);
    doc.roundedRect(MARGINS.left + 5, yPosition, width - MARGINS.left - MARGINS.right - 10, 40, 3, 3);

    doc.setFontSize(8);
    doc.setFont("helvetica", "normal");
    doc.setTextColor(...COLORS.text);
    const splitNotes = doc.splitTextToSize(timeline.tnotes, width - MARGINS.left - MARGINS.right - 25);
    doc.text(splitNotes, MARGINS.left + 10, yPosition + 10);
    yPosition += 50;
  }

  return yPosition + 20;
};

// ---------- Resource Breakdown Page ----------
const createResourceBreakdownPage = (doc, timeline) => {
  doc.addPage();
  addWatermarkToCurrentPage(doc);
  let yPosition = createPageHeader(doc, "Resource Breakdown", "DETAILED RESOURCES");
  const { width } = getPageSize(doc);

  if (timeline.tworker && timeline.tworker.length > 0) {
    doc.setFillColor(...COLORS.primary);
    doc.roundedRect(MARGINS.left, yPosition, width - MARGINS.left - MARGINS.right, 18, 2, 2, 'F');
    doc.setFontSize(12);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(...COLORS.white);
    doc.text(`WORKERS (${timeline.tworker.length})`, MARGINS.left + 6, yPosition + 12);
    yPosition += 26;

    const workerData = timeline.tworker.map(worker => [
      worker.name || 'N/A',
      worker.role || 'N/A',
      worker.hoursWorked || 0,
      worker.specialization || 'General'
    ]);

    autoTable(doc, {
      startY: yPosition,
      head: [['Name', 'Role', 'Hours', 'Specialization']],
      body: workerData,
      theme: 'striped',
      headStyles: {
        fillColor: COLORS.primary,
        textColor: COLORS.white,
        fontStyle: 'bold',
        fontSize: 8
      },
      bodyStyles: {
        fontSize: 7,
        cellPadding: 3
      },
      alternateRowStyles: {
        fillColor: COLORS.light
      },
      styles: {
        fontSize: 7,
        cellPadding: 3,
        lineColor: COLORS.primary,
        lineWidth: 0.1
      },
      margin: { left: MARGINS.left, right: MARGINS.right },
      pageBreak: 'auto'
    });

    yPosition = doc.lastAutoTable ? doc.lastAutoTable.finalY + 12 : yPosition + 20;
  }

  if (timeline.tengineer && timeline.tengineer.length > 0) {
    doc.setFillColor(...COLORS.secondary);
    doc.roundedRect(MARGINS.left, yPosition, width - MARGINS.left - MARGINS.right, 18, 2, 2, 'F');
    doc.setFontSize(12);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(...COLORS.white);
    doc.text(`ENGINEERS (${timeline.tengineer.length})`, MARGINS.left + 6, yPosition + 12);
    yPosition += 26;

    const engineerData = timeline.tengineer.map(engineer => [
      engineer.name || 'N/A',
      engineer.specialty || 'N/A',
      engineer.hoursWorked || 0,
      engineer.certification || 'Standard'
    ]);

    autoTable(doc, {
      startY: yPosition,
      head: [['Name', 'Specialty', 'Hours', 'Certification']],
      body: engineerData,
      theme: 'striped',
      headStyles: {
        fillColor: COLORS.secondary,
        textColor: COLORS.white,
        fontStyle: 'bold',
        fontSize: 8
      },
      bodyStyles: {
        fontSize: 7,
        cellPadding: 3
      },
      alternateRowStyles: {
        fillColor: COLORS.light
      },
      styles: {
        fontSize: 7,
        cellPadding: 3,
        lineColor: COLORS.secondary,
        lineWidth: 0.1
      },
      margin: { left: MARGINS.left, right: MARGINS.right },
      pageBreak: 'auto'
    });

    yPosition = doc.lastAutoTable ? doc.lastAutoTable.finalY + 12 : yPosition + 20;
  }

  if (timeline.tmaterials && timeline.tmaterials.length > 0) {
    if (yPosition > (getPageSize(doc).height - MARGINS.bottom - 100)) {
      doc.addPage();
      addWatermarkToCurrentPage(doc);
      yPosition = createPageHeader(doc, "Materials & Expenses", "RESOURCE COSTS");
    }

    doc.setFillColor(...COLORS.accent);
    doc.roundedRect(MARGINS.left, yPosition, width - MARGINS.left - MARGINS.right, 18, 2, 2, 'F');
    doc.setFontSize(12);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(...COLORS.white);
    doc.text(`MATERIALS (${timeline.tmaterials.length})`, MARGINS.left + 6, yPosition + 12);
    yPosition += 26;

    const materialData = timeline.tmaterials.map(material => [
      material.name || 'N/A',
      material.quantity || 0,
      material.unit || 'units',
      material.cost ? `$${parseFloat(material.cost).toLocaleString()}` : '$0'
    ]);

    autoTable(doc, {
      startY: yPosition,
      head: [['Material', 'Quantity', 'Unit', 'Cost']],
      body: materialData,
      theme: 'striped',
      headStyles: {
        fillColor: COLORS.accent,
        textColor: COLORS.white,
        fontStyle: 'bold',
        fontSize: 8
      },
      bodyStyles: {
        fontSize: 7,
        cellPadding: 3
      },
      alternateRowStyles: {
        fillColor: COLORS.light
      },
      styles: {
        fontSize: 7,
        cellPadding: 3,
        lineColor: COLORS.accent,
        lineWidth: 0.1
      },
      columnStyles: {
        3: { halign: 'right' }
      },
      margin: { left: MARGINS.left, right: MARGINS.right },
      pageBreak: 'auto'
    });
  }

  return yPosition + 20;
};

// ---------- Main export functions (unchanged names, improved finishing) ----------
export const exportProjectToPDF = (project, filename) => {
  const doc = new jsPDF();

  try {
    createCoverPage(doc, `Project Report: ${project.pname || 'Unnamed Project'}`, "PROJECT ANALYSIS");
    createAboutCompanyPage(doc);
    createVisionMissionPage(doc);
    createProjectDataPage(doc, project, "PROJECT");
    createSignaturePage(doc);
    createThankYouPage(doc);

    // Try to pull a base64 logo image from project (optional)
    const logo = project?.logoBase64 || project?.logo || null;
    addWatermark(doc, logo);
    addPageNumbers(doc);

    // Add footers to content pages (skip cover and last)
    const pageCount = doc.getNumberOfPages();
    for (let i = 2; i <= pageCount - 1; i++) {
      doc.setPage(i);
      createFooter(doc);
    }

    doc.save(filename || `project-${project.pcode || Date.now()}.pdf`);
  } catch (error) {
    console.error('Error generating project PDF:', error);
    alert('Error generating PDF. Please try again.');
  }
};

export const exportTimelineToPDF = (timeline, filename) => {
  const doc = new jsPDF();

  try {
    createCoverPage(doc, `Timeline Report: ${timeline.projectDetails?.pname || timeline.pcode || 'Timeline'}`, "TIMELINE ANALYSIS");
    createAboutCompanyPage(doc);
    createVisionMissionPage(doc);
    createTimelineDataPage(doc, timeline);
    createResourceBreakdownPage(doc, timeline);
    createSignaturePage(doc);
    createThankYouPage(doc);

    const logo = timeline?.logoBase64 || timeline?.logo || null;
    addWatermark(doc, logo);
    addPageNumbers(doc);

    const pageCount = doc.getNumberOfPages();
    for (let i = 2; i <= pageCount - 1; i++) {
      doc.setPage(i);
      createFooter(doc);
    }

    doc.save(filename || `timeline-${timeline.pcode || Date.now()}.pdf`);
  } catch (error) {
    console.error('Error generating timeline PDF:', error);
    alert('Error generating PDF. Please try again.');
  }
};

export const exportFinancialDashboardToPDF = (financial, filename) => {
  const doc = new jsPDF();

  try {
    createCoverPage(doc, `Financial Dashboard: ${financial.dashboardName || 'Financial Report'}`, "FINANCIAL ANALYSIS");
    createAboutCompanyPage(doc);
    createVisionMissionPage(doc);

    // Financial page
    doc.addPage();
    addWatermarkToCurrentPage(doc);
    let yPosition = createPageHeader(doc, "Financial Dashboard", "FINANCIAL OVERVIEW");
    const { width } = getPageSize(doc);

    doc.setFillColor(...COLORS.primary);
    doc.roundedRect(MARGINS.left, yPosition, width - MARGINS.left - MARGINS.right, 22, 2, 2, 'F');
    doc.setFontSize(14);
    doc.setFont("helvetica", "bold");
    doc.setTextColor(...COLORS.white);
    doc.text("FINANCIAL SUMMARY", width / 2, yPosition + 15, { align: 'center' });
    yPosition += 30;

    const financialCards = [
      {
        label: "Grand Total",
        value: financial.financialSummary?.grandTotal ? `$${financial.financialSummary.grandTotal.toLocaleString()}` : '$0',
        color: COLORS.success
      },
      {
        label: "Dashboard ID",
        value: financial.dashboardId || 'N/A',
        color: COLORS.primary
      },
      {
        label: "Status",
        value: financial.status || 'Active',
        color: COLORS.secondary
      }
    ];

    financialCards.forEach((card, index) => {
      const xPos = MARGINS.left + (index * 55);
      doc.setFillColor(...COLORS.white);
      doc.roundedRect(xPos, yPosition, 50, 40, 3, 3, 'F');
      doc.setDrawColor(...card.color);
      doc.setLineWidth(0.4);
      doc.roundedRect(xPos, yPosition, 50, 40, 3, 3);

      doc.setFillColor(...card.color);
      doc.roundedRect(xPos + 3, yPosition + 3, 44, 14, 2, 2, 'F');
      doc.setFontSize(7);
      doc.setFont("helvetica", "bold");
      doc.setTextColor(...COLORS.white);
      doc.text(card.label, xPos + 25, yPosition + 12, { align: 'center' });

      doc.setFontSize(9);
      doc.setFont("helvetica", "bold");
      doc.setTextColor(...card.color);
      const splitValue = doc.splitTextToSize(card.value, 44);
      doc.text(splitValue, xPos + 25, yPosition + 26, { align: 'center' });
    });

    yPosition += 50;

    const financialData = [
      ["Dashboard Name", financial.dashboardName || 'N/A'],
      ["Dashboard ID", financial.dashboardId || 'N/A'],
      ["Status", financial.status || 'N/A'],
      ["Created Date", financial.createdAt ? new Date(financial.createdAt).toLocaleDateString() : 'N/A'],
      ["Grand Total", financial.financialSummary?.grandTotal ? `$${financial.financialSummary.grandTotal.toLocaleString()}` : '$0']
    ];

    autoTable(doc, {
      startY: yPosition,
      head: [['Financial Property', 'Value']],
      body: financialData,
      theme: 'grid',
      headStyles: {
        fillColor: COLORS.primary,
        textColor: COLORS.white,
        fontStyle: 'bold',
        fontSize: 9
      },
      bodyStyles: {
        fontSize: 8,
        textColor: COLORS.text
      },
      alternateRowStyles: {
        fillColor: COLORS.light
      },
      columnStyles: {
        0: {
          cellWidth: 60,
          fontStyle: 'bold',
          fillColor: [245, 248, 250],
          textColor: COLORS.primary
        },
        1: { cellWidth: width - MARGINS.left - MARGINS.right - 85 }
      },
      margin: { left: MARGINS.left, right: MARGINS.right }
    });

    createSignaturePage(doc);
    createThankYouPage(doc);

    const logo = financial?.logoBase64 || financial?.logo || null;
    addWatermark(doc, logo);
    addPageNumbers(doc);

    const pageCount = doc.getNumberOfPages();
    for (let i = 2; i <= pageCount - 1; i++) {
      doc.setPage(i);
      createFooter(doc);
    }

    doc.save(filename || `financial-${financial.dashboardId || Date.now()}.pdf`);
  } catch (error) {
    console.error('Error generating financial PDF:', error);
    alert('Error generating PDF. Please try again.');
  }
};